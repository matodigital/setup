#!/usr/bin/env bash

set -euo pipefail

RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m'

_info() { printf "${BLUE}→${NC} %s\n" "$1"; }
_ok()   { printf "${GREEN}✔ %s${NC}\n" "$1"; }
_warn() { printf "${YELLOW}⚠ %s${NC}\n" "$1"; }
_die()  { printf "${RED}ERROR:${NC} %s\n" "$1"; exit 1; }

RATPOISON_REPO="https://git.savannah.nongnu.org/git/ratpoison.git"
PATCHES_REPO="https://github.com/matodigital/ratpoison-patches.git"

RATPOISON_DIR="$HOME/ratpoison"
PATCHES_DIR="$HOME/ratpoison-patches"

cd "$HOME"

_info "Cloning ratpoison..."
rm -rf "$RATPOISON_DIR"
git clone --depth=1 "$RATPOISON_REPO" "$RATPOISON_DIR" \
  && _ok "Cloned ratpoison" || _die "Failed cloning ratpoison"

_info "Cloning ratpoison-patches..."
rm -rf "$PATCHES_DIR"
git clone --depth=1 "$PATCHES_REPO" "$PATCHES_DIR" \
  && _ok "Cloned ratpoison-patches" || _die "Failed cloning ratpoison-patches"

_info "Moving patches into ratpoison dir..."
find "$PATCHES_DIR" -maxdepth 1 -type f -name "*.patch" -exec mv {} "$RATPOISON_DIR"/ \;
_ok "Moved patches"

_info "Removing patch repo..."
rm -rf "$PATCHES_DIR"

cd "$RATPOISON_DIR"

_info "Applying patches..."
for p in *.patch; do
  [ -f "$p" ] || continue
  _info "Applying $p"
  patch -p1 < "$p" && _ok "Applied $p" || _die "Failed applying $p"
done

_info "Cleaning up patch files..."
rm -f *.patch
_ok "Removed patch files"

_info "Building ratpoison..."
./autogen.sh
./configure
sudo make install
_ok "Installed ratpoison"

cd "$HOME"
_info "Removing ratpoison source dir..."
rm -rf "$RATPOISON_DIR"

_ok "All done!"
